
var_1: &default_docker_image circleci/node:10.12
var_2: &cache_key v4-chillnfix.com-{{ .Branch }}-{{ checksum "yarn.lock" }}-node-10.12
var_3: &build_cache_key v2-chillfix.com-build-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}

# Settings common to each job
var_4: &job_defaults
  working_directory: ~/chillnfix.com
  docker:
  - image: *default_docker_image


# After checkout, rebase on top of master.
# See https://discuss.circleci.com/t/1662
var_5: &post_checkout
  post: git pull --ff-only origin "refs/pull/${CI_PULL_REQUEST//*pull\//}/merge"


# Initializes the CI environment by setting up common environment variables.
# var_6: &init_environment
#   run:
#     name: Initializing environment (setting up variables, overwriting Yarn)
#     # Overwrite the yarn installed in the docker container with our own version.
#     command: |
#       ourYarn=$(realpath ./third_party/github.com/yarnpkg/yarn/releases/download/v1.16.0/yarn-1.16.0.js)
#       sudo chmod a+x $ourYarn
#       sudo ln -fs $ourYarn /usr/local/bin/yarn
#       echo "Yarn version: $(yarn --version)"


var_7: &yarn_install
  run:
    name: Running Yarn install
    command: yarn install --frozen-lockfile --non-interactive


version: 2
jobs:
  lint:
    <<: *job_defaults
    steps:
      - checkout:
          <<: *post_checkout
      - restore_cache:
          key: *cache_key
      # - *init_environment
      - *yarn_install
      - save_cache:
          key: *cache_key
          paths:
            - "node_modules"
      - run: npm run tslint
      - run: npm run stylelint

  build:
    <<: *job_defaults
    steps:
      - checkout:
          <<: *post_checkout
      - restore_cache:
          key: *cache_key
      # - *init_environment
      - *yarn_install
      - run: npm run build_prod
      - save_cache:
          key: *build_cache_key
          paths:
            - "dist"
            - "firebase.json"
            - ".firebaserc"

  deploy_preview:
    <<: *job_defaults
    steps:
      - checkout:
          <<: *post_checkout
      - restore_cache:
          key: *cache_key
      - restore_cache:
          key: *build_cache_key
      - run:
          name: Deploy Master to Firebase (preview)
          command: ./node_modules/.bin/firebase deploy --token=$FIREBASE_DEPLOY_TOKEN

workflows:
  version: 2
  default_workflow:
    jobs:
      - lint
      - build
      - deploy_preview:
          requires:
            - build
          filters:
            branches:
              only: master
